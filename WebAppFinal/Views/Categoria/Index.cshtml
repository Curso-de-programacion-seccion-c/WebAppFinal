@model List<WebAppFinal.Models.CategoriaModel>
@{
    ViewBag.Title = "Categorías";
}

<h2>Categorías</h2>

<div class="input-group mb-3">
    <input type="number" id="buscar-id" class="form-control" placeholder="Buscar por ID de Categoría" value="@ViewBag.IdBuscado" />
    <button id="btnBuscar" class="btn btn-outline-primary">
        <i class="fa fa-search"></i> Buscar
    </button>
</div>

<button id="btnNuevaCategoria" class="btn btn-outline-success mb-3">
    <i class="fa fa-plus"></i> Agregar Artículo
</button>

<table class="table table-striped table-bordered table-hover table-striped-columns">
    <thead class="bg-warning text-dark">
        <tr>
            <th>ID</th>
            <th>Nombre</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.IdCategoria</td>
                <td>@item.NombreCategoria</td>
                <td>
                    <button class="btn btn-sm btn-info btnEditar" data-id="@item.IdCategoria" data-nombre="@item.NombreCategoria">
                        <i class="fa fa-pen"></i>
                    </button>
                    <button class="btn btn-sm btn-danger btnEliminar" data-id="@item.IdCategoria">
                        <i class="fa fa-trash"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    $(document).ready(function () {
        // Crear
        $('#btnNuevaCategoria').click(function () {
            Swal.fire({
                title: 'Nueva Categoría',
                input: 'text',
                inputLabel: 'Nombre',
                inputPlaceholder: 'Ej: Herramientas',
                showCancelButton: true,
                confirmButtonText: 'Crear',
                cancelButtonText: 'Cancelar',
                preConfirm: (nombre) => {
                    if (!nombre) {
                        Swal.showValidationMessage('El nombre es requerido');
                    }
                    return nombre;
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("CrearCategoria", "Categoria")', { nombreCategoria: result.value })
                        .done(() => {
                            Swal.fire('Éxito', 'Categoría creada correctamente', 'success').then(() => {
                                location.reload();
                            });
                        })
                        .fail(() => {
                            Swal.fire('Error', 'No se pudo crear la categoría', 'error');
                        });
                }
            });
        });

        // Editar
        $('.btnEditar').click(function () {
            const id = $(this).data('id');
            const nombre = $(this).data('nombre');

            Swal.fire({
                title: 'Editar Categoría',
                input: 'text',
                inputLabel: 'Nuevo nombre',
                inputValue: nombre,
                showCancelButton: true,
                confirmButtonText: 'Actualizar',
                cancelButtonText: 'Cancelar',
                preConfirm: (nuevoNombre) => {
                    if (!nuevoNombre) {
                        Swal.showValidationMessage('El nombre no puede estar vacío');
                    }
                    return nuevoNombre;
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("EditarCategoria", "Categoria")', {
                        idCategoria: id,
                        nombreCategoria: result.value
                    }).done(() => {
                        Swal.fire('Actualizado', 'Categoría modificada correctamente', 'success').then(() => {
                            location.reload();
                        });
                    }).fail(() => {
                        Swal.fire('Error', 'No se pudo actualizar la categoría', 'error');
                    });
                }
            });
        });

        // Eliminar
        $('.btnEliminar').click(function () {
            const id = $(this).data('id');

            Swal.fire({
                title: '¿Eliminar categoría?',
                text: "Esta acción no se puede deshacer.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("EliminarCategoria", "Categoria")', { idCategoria: id })
                        .done(() => {
                            Swal.fire('Eliminada', 'Categoría eliminada con éxito', 'success').then(() => {
                                location.reload();
                            });
                        })
                        .fail(() => {
                            Swal.fire('Error', 'No se pudo eliminar la categoría', 'error');
                        });
                }
            });
        });

        // Buscar por ID
        $('#btnBuscar').click(function () {
            const id = $('#buscar-id').val();
            if (!id) {
                Swal.fire('Atención', 'Ingrese un ID para buscar.', 'warning');
                return;
            }

            $.post('@Url.Action("BuscarPorId", "Categoria")', { idCategoria: id })
                .done((data) => {
                    document.open();
                    document.write(data);
                    document.close();
                }).fail(() => {
                    Swal.fire('Error', 'Error al buscar categoría.', 'error');
                });
        });

        // Recargar toda la lista si se borra el número
        $('#buscar-id').on('input', function () {
            if ($(this).val() === '') {
                $.post('@Url.Action("BuscarPorId", "Categoria")', { idCategoria: '' })
                    .done((data) => {
                        document.open();
                        document.write(data);
                        document.close();
                    });
            }
        });
    });
</script>
